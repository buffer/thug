name: Linux build/test workflow

on: [push, pull_request]

jobs:
  build:
    name: Build and test Thug (Python ${{ matrix.python-version }})
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
        os: [ubuntu-22.04]

    steps:
      - name: STEP 1. Checkout repository
        uses: actions/checkout@v4

      - name: STEP 2. Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: STEP 3. Install dependencies
        run: |
          sudo apt-get install python3 python3-dev python-is-python3
          sudo apt-get install build-essential clang systemtap-sdt-dev
          sudo apt-get install libfuzzy-dev graphviz libgraphviz-dev tesseract-ocr unrar xfonts-base xfonts-75dpi

      - name: STEP 4. Install libemu
        run: |
          git clone https://github.com/buffer/libemu.git
          cd libemu
          autoreconf -v -i
          ./configure
          sudo make install
          cd -
          sudo ldconfig

      - name: STEP 5. Install Tox
        run: |
          pip3 install --upgrade pip
          pip3 install tox tox-gh-actions
          pip3 install appdirs

      - name: STEP 6. Install Thug configuration
        run: |
          sudo mkdir -p /etc/thug/
          sudo cp -R thug/conf/* /etc/thug/

      - name: STEP 7. Setup environment
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144

      - name: STEP 8. Setup ElasticSearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 8.11.0
          security-enabled: false

      - name: STEP 9. Setup MongoDB
        uses: DigiPie/mongo-action@v2.0.1

      - name: STEP 10. Test Thug
        run: |
          tox

      - name: STEP 11. Upload coverage report to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
